@model dotnet8_mvc_auth_boilerplate.Models.PaginatedList<dotnet8_mvc_auth_boilerplate.Models.UserModel>

@{
    ViewData["Title"] = "Users";
}

<div class="mx-auto max-w-screen-2xl p-4 md:p-6 2xl:p-10">
    <!-- Page Title -->
    <div class="mb-6">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
            User Management
        </h2>
    </div>

    <!-- Search and Filter Section -->
    <div class="mb-6">
        <form asp-action="Index" method="get" class="w-full">
            <div class="flex flex-col gap-4">
                <!-- Search Input Row -->
                <div class="flex flex-col sm:flex-row gap-3">
                    <!-- Username Search -->
                    <div class="relative">
                        <input type="text" name="username" value="@ViewData["CurrentFilter"]" 
                               placeholder="Search by username..."
                               class="shadow-theme-lg focus:border-brand-300 focus:ring-3 focus:ring-brand-500/20 dark:focus:border-brand-800 h-11 w-full rounded-lg border border-gray-300 bg-transparent px-4 py-2.5 pr-10 text-sm text-gray-800 placeholder:text-gray-400 focus:outline-none dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30" />
                    </div>
                    
                    <!-- Login Provider Dropdown -->
                    <div x-data="{ isOptionSelected: false }" class="relative z-20 bg-transparent min-w-48">
                        <select name="loginProvider"
                                class="dark:bg-dark-900 shadow-theme-xs focus:border-brand-300 focus:ring-brand-500/10 dark:focus:border-brand-800 h-11 w-full rounded-lg border border-gray-300 bg-transparent px-4 py-2.5 text-sm text-gray-800 placeholder:text-gray-400 focus:ring-3 focus:outline-hidden dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30"
                                :class="isOptionSelected && 'text-gray-800 dark:text-white/90'"
                                @@change="isOptionSelected = true">
                            <option value="" class="text-gray-700 dark:bg-gray-900 dark:text-gray-400">
                                All Providers
                            </option>
                            <option value="ActiveDirectory"
                                    selected="@(ViewData["LoginProviderFilter"]?.ToString() == "ActiveDirectory")"
                                    class="text-gray-700 dark:bg-gray-900 dark:text-gray-400">
                                Active Directory
                            </option>
                            <option value="Local"
                                    selected="@(ViewData["LoginProviderFilter"]?.ToString() == "Local")"
                                    class="text-gray-700 dark:bg-gray-900 dark:text-gray-400">
                                Local
                            </option>
                        </select>
                    </div>

                     <div class="flex flex-col sm:flex-row gap-3 items-center">
                        <button type="submit" class="flex items-center justify-center gap-2 px-6 py-2.5 text-sm font-medium text-white transition rounded-lg bg-blue-500 shadow-theme-xs hover:bg-blue-600 focus:outline-none focus:ring-3 focus:ring-blue-500/20">
                            <i class="iconify w-4 h-4" data-icon="material-symbols-light:search"></i>
                            Search
                        </button>
                        
                        <a asp-action="Index" class="flex items-center justify-center gap-2 px-4 py-2.5 text-sm font-medium text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200 transition rounded-lg border border-gray-300 hover:border-gray-400 dark:border-gray-600 dark:hover:border-gray-500">
                            <i class="iconify w-4 h-4" data-icon="material-symbols-light:filter-alt-off"></i>
                            Clear Filter
                        </a>
                    </div>

                    
                </div>
                
                <!-- Action Buttons Row -->
               
            </div>
        </form>
        
        <!-- Page Size Selector -->
        <div class="flex items-center justify-end gap-3 mt-4">
            <label class="text-sm font-medium text-gray-700 dark:text-gray-300">Show</label>
            <select id="pageSizeSelector" class="rounded-md border border-gray-300 bg-white px-3 py-1 text-sm dark:border-gray-600 dark:bg-gray-800 dark:text-gray-300" 
                    onchange="changePageSize(this.value)">
                @{
                    var currentPageSize = ViewBag.PaginationInfo?.PageSize ?? 10;
                }
                <option value="5" selected="@(currentPageSize == 5)">5</option>
                <option value="10" selected="@(currentPageSize == 10)">10</option>
                <option value="25" selected="@(currentPageSize == 25)">25</option>
                <option value="50" selected="@(currentPageSize == 50)">50</option>
            </select>
            <span class="text-sm font-medium text-gray-700 dark:text-gray-300">per page</span>
        </div>
    </div>

    <div class="flex flex-col gap-10">
        <div class="rounded-xl border border-gray-200 bg-white shadow-default dark:border-gray-800 dark:bg-white/[0.03]">
            <div class="max-w-full overflow-x-auto">
                <table class="w-full table-auto">
                    <thead class="border-gray-100 border-y bg-gray-50 dark:border-gray-800 dark:bg-gray-900">
                        <tr class="border-b border-gray-100 dark:border-gray-800">
                            <th class="px-6 py-3 font-medium text-gray-700 text-sm dark:text-gray-400">
                                No.
                            </th>
                            <th class="font-medium text-gray-700 text-sm dark:text-gray-400">
                                Username
                            </th>
                            <th class="font-medium text-gray-700 text-sm dark:text-gray-400">
                                Email
                            </th>
                            <th class="font-medium text-gray-700 text-sm dark:text-gray-400">
                                Email Confirmed
                            </th>
                            <th class="font-medium text-gray-700 text-sm dark:text-gray-400">
                                Login Provider
                            </th>
                            <th class="font-medium text-gray-700 text-sm dark:text-gray-400">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-100 dark:divide-gray-800">
                        @{
                            var currentPaginationInfo = ViewBag.PaginationInfo as dotnet8_mvc_auth_boilerplate.Models.PaginationInfo;
                            int rowNumber = currentPaginationInfo != null ? 
                                ((currentPaginationInfo.CurrentPage - 1) * currentPaginationInfo.PageSize) : 0;
                        }
                        @foreach (var item in Model)
                        {
                            rowNumber++;
                            <tr>
                                <td class="px-6 py-3 whitespace-nowrap">
                                    <span class="text-gray-700 text-sm dark:text-gray-400">
                                        @rowNumber
                                    </span>
                                </td>
                                <td class="px-6 py-3 whitespace-nowrap">
                                    <h5 class="text-sm text-gray-700 dark:text-gray-400">
                                        @Html.DisplayFor(modelItem => item.User.UserName)
                                    </h5>
                                </td>
                                <td class="px-6 py-3 whitespace-nowrap">
                                    <p class="text-sm text-gray-700 dark:text-gray-400">
                                        @Html.DisplayFor(modelItem => item.User.Email)
                                    </p>
                                </td>
                                <td class="px-6 py-3 whitespace-nowrap">
                                    @if (item.User.EmailConfirmed)
                                    {
                                        <span class="inline-flex items-center justify-center gap-1 rounded-full bg-success-100 px-2.5 py-0.5 text-sm text-success-500 dark:bg-white/5 dark:text-success-300">
                                            Yes
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="inline-flex items-center justify-center gap-1 rounded-full bg-error-100 px-2.5 py-0.5 text-sm text-error-500 dark:bg-white/5 dark:text-error-300">
                                            No
                                        </span>
                                    }

                                </td>
                                <td class="px-6 py-3 whitespace-nowrap">
                                    @if (item.LoginProviders != null && item.LoginProviders.Any())
                                    {
                                        foreach (var provider in item.LoginProviders)
                                        {
                                            <span class="inline-flex items-center justify-center gap-1 rounded-full bg-brand-100 px-2.5 py-0.5 text-sm text-brand-700 dark:bg-white/5 dark:text-brand-300">
                                                @provider
                                            </span>
                                        }
                                    }
                                    else
                                    {
                                        @* <span class="text-gray-500">None</span> *@
                                        <span class="inline-flex items-center justify-center gap-1 rounded-full bg-gray-100 px-2.5 py-0.5 text-sm text-gray-700 dark:text-gray-400 dark:bg-white/5 dark:text-gray-300">
                                            Local
                                        </span>
                                    }
                                </td>
                                <td class="px-6 py-3 whitespace-nowrap">
                                    <div class="flex items-center space-x-3.5">
                                        <a asp-action="Details" asp-route-id="@item.User.Id" class="hover:text-primary">
                                            <svg class="fill-current" width="18" height="18" viewBox="0 0 18 18" fill="none"
                                                xmlns="http://www.w3.org/2000/svg">
                                                <path
                                                    d="M8.99981 14.8219C3.43106 14.8219 0.674805 9.50624 0.562305 9.28124C0.47793 9.11249 0.47793 8.88749 0.562305 8.71874C0.674805 8.49374 3.43106 3.17812 8.99981 3.17812C14.5686 3.17812 17.3248 8.49374 17.4373 8.71874C17.5217 8.88749 17.5217 9.11249 17.4373 9.28124C17.3248 9.50624 14.5686 14.8219 8.99981 14.8219ZM1.85605 8.99999C2.4748 10.0406 4.89356 13.9937 8.99981 13.9937C13.1061 13.9937 15.5248 10.0406 16.1436 8.99999C15.5248 7.95936 13.1061 4.00624 8.99981 4.00624C4.89356 4.00624 2.4748 7.95936 1.85605 8.99999Z"
                                                    fill="" />
                                                <path
                                                    d="M9 11.3906C7.67812 11.3906 6.60938 10.3219 6.60938 9C6.60938 7.67813 7.67812 6.60938 9 6.60938C10.3219 6.60938 11.3906 7.67813 11.3906 9C11.3906 10.3219 10.3219 11.3906 9 11.3906ZM9 7.875C8.38125 7.875 7.875 8.38125 7.875 9C7.875 9.61875 8.38125 10.125 9 10.125C9.61875 10.125 10.125 9.61875 10.125 9C10.125 8.38125 9.61875 7.875 9 7.875Z"
                                                    fill="" />
                                            </svg>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            @* Pagination Component *@
            @if (ViewBag.PaginationInfo != null)
            {
                @await Component.InvokeAsync("Pagination", ViewBag.PaginationInfo)
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function changePageSize(newPageSize) {
            const url = new URL(window.location);
            url.searchParams.set('pageSize', newPageSize);
            url.searchParams.set('page', '1'); // Reset to first page when changing page size
            window.location.href = url.toString();
        }
    </script>
}

@model dotnet8_mvc_auth_boilerplate.Models.UserModel

@{
    ViewData["Title"] = "User Details";
    ViewData["Module"] = "User";
    var displayName = Model?.Claims?.FirstOrDefault(c => c.Type == "DisplayName")?.Value ?? Model?.User?.UserName;
    var lockoutEnd = Model?.User?.LockoutEnd;
    bool isActive = Model?.User != null && (!(Model.User.LockoutEnabled) || !lockoutEnd.HasValue || (lockoutEnd.Value <= DateTimeOffset.UtcNow));
}

<div class="mx-auto max-w-screen-2xl p-4 md:p-6 2xl:p-10">
    @if (TempData["StatusMessage"] is string status && !string.IsNullOrWhiteSpace(status))
    {
        <div class="mb-4 rounded-lg border border-success-light bg-success-light text-success-dark dark:border-success-dark dark:bg-success-dark/20 dark:text-success-light px-4 py-3">
            <div class="flex items-center gap-2">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                </svg>
                <span class="text-sm font-medium">@status</span>
            </div>
        </div>
    }
    <div class="mb-8">
        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
            <div>
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-3">
                    @ViewData["Title"]
                </h2>
                <p class="text-base text-gray-600 dark:text-gray-300 max-w-2xl">
                    View account information, security status, and directory claims for this user
                </p>
            </div>
            <div class="mt-6 sm:mt-0 flex flex-col sm:flex-row gap-3 sm:items-center">
                <div class="flex items-center gap-3">
                    @if (isActive)
                    {
                        <span class="inline-flex items-center gap-2 px-4 py-2.5 rounded-full bg-success-light dark:bg-green-900/30 text-success dark:text-success-light text-sm font-semibold border border-success dark:border-success-dark">
                            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                            </svg>
                            Active Status
                        </span>
                    }
                    else
                    {
                        <span class="inline-flex items-center gap-2 px-4 py-2.5 rounded-xl bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 text-sm font-semibold">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            Account Locked
                        </span>
                    }
                    @if (Model?.User?.EmailConfirmed == true)
                    {
                        <span class="inline-flex items-center gap-2 px-4 py-2.5 rounded-full bg-brand-light dark:bg-blue-900/30 text-brand dark:text-brand-light text-sm font-semibold border border-brand dark:border-brand">
                            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                            </svg>
                            Verified Email
                        </span>
                    }
                </div>
                <div class="flex justify-end">
                    <a asp-action="Index" class="inline-flex items-center gap-2 px-4 py-2.5 rounded-xl bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 text-sm font-semibold">
                        <i class="iconify mr-2" data-icon="material-symbols-light:arrow-back"></i>
                        Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="w-full">
        <div class="rounded-xl border border-gray-200 bg-white shadow-default dark:border-gray-800 dark:bg-surface-light">
            <!-- Header strip -->
            <div class="bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-800 dark:via-gray-800 dark:to-gray-900 p-8 border-b border-gray-200 dark:border-gray-700">
                <div class="flex flex-col items-center gap-2 text-center">
                    <div class="w-16 h-16 rounded-full bg-primary/10 flex items-center justify-center">
                        <svg class="w-8 h-8 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </div>
                    <h2 class="text-xl font-semibold text-gray-900 dark:text-white">@displayName</h2>
                    <p class="text-sm text-gray-600 dark:text-gray-300">@Model?.User?.Email</p>
                </div>
            </div>

            <div class="p-8">
                <!-- Admin actions -->
                @if (User.IsInRole("Admin"))
                {
                    <div class="flex flex-col sm:flex-row justify-end gap-3 mb-6">
                        <a asp-action="Edit" asp-route-id="@Model?.User?.Id" class="inline-flex items-center gap-3 px-6 py-3 rounded-xl bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 text-sm font-semibold transition-all duration-200">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                            </svg>
                            Edit User
                        </a>
                        @if (Model?.User?.LockoutEnabled == true && Model?.User?.LockoutEnd.HasValue == true && Model.User.LockoutEnd.Value > DateTimeOffset.UtcNow)
                        {
                            <form asp-action="Unlock" asp-route-id="@Model?.User?.Id" method="post">
                                <button type="submit" class="inline-flex items-center gap-3 px-6 py-3 rounded-xl bg-success hover:bg-success-dark text-white text-sm font-semibold transition-all duration-200">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                                    </svg>
                                    Unlock Account
                                </button>
                                @Html.AntiForgeryToken()
                            </form>
                        }
                    </div>
                }

                <!-- Account details & Employment -->
                <div class="space-y-0">
                    <div class="border-b border-gray-200 dark:border-gray-700 p-6">
                        <div class="flex items-center mb-6">
                            <div class="p-2.5 bg-blue-100 dark:bg-blue-900/30">
                                <svg class="w-5 h-5 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                            </div>
                            <h3 class="ml-3 text-lg font-semibold text-gray-900 dark:text-white">Account Details</h3>
                        </div>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-500 dark:text-gray-400">Username</label>
                                <p class="mt-1 text-base font-medium text-gray-900 dark:text-white">@Model?.User?.UserName</p>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-500 dark:text-gray-400">Email Address</label>
                                <p class="mt-1 text-base font-medium text-gray-900 dark:text-white break-all">@Model?.User?.Email</p>
                            </div>
                        </div>
                    </div>

                    <div class="p-6">
                        <div class="flex items-center mb-6">
                            <div class="p-2.5 bg-success-light dark:bg-green-500/30">
                                <svg class="w-5 h-5 text-success dark:text-success" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0H8m8 0v2a2 2 0 01-2 2H10a2 2 0 01-2-2V6m8 0H8"></path>
                                </svg>
                            </div>
                            <h3 class="ml-3 text-lg font-semibold text-gray-900 dark:text-white">Employment</h3>
                        </div>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-500 dark:text-gray-400">Job Title</label>
                                <p class="mt-1 text-base font-medium text-gray-900 dark:text-white">@Model?.Claims?.FirstOrDefault(c => c.Type == "JobTitle")?.Value</p>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-500 dark:text-gray-400">Department</label>
                                <p class="mt-1 text-base font-medium text-gray-900 dark:text-white">@Model?.Claims?.FirstOrDefault(c => c.Type == "Department")?.Value</p>
                            </div>
                        </div>
                    </div>
                </div>

                @if (Model?.Claims?.Any(c => !new[] { "Department", "JobTitle", "DisplayName" }.Contains(c.Type)) == true)
                {
                    <div class="mt-8">
                        <h4 class="text-xl font-semibold text-gray-700 dark:text-gray-400 mb-6 flex items-center">
                            <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            Additional Information
                        </h4>
                        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                            @if (Model?.Claims != null)
                            {
                                @foreach (var claim in Model.Claims.Where(c => !new[] { "Department", "JobTitle", "DisplayName" }.Contains(c.Type)))
                                {
                                    <div class="p-4 rounded-lg border border-gray-200 dark:border-gray-800 bg-gray-50 dark:bg-gray-800/50">
                                        <label class="block text-sm font-medium text-gray-600 dark:text-gray-400 mb-1">@claim.Type</label>
                                        <p class="text-base font-medium text-gray-700 dark:text-gray-400">@claim.Value</p>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Security and Account Status -->
        <div class="mt-8 grid grid-cols-1 lg:grid-cols-2 gap-8">
            <div class="rounded-xl border border-gray-200 bg-white shadow-default dark:border-gray-800 dark:bg-surface-light">
                <div class="border-b border-gray-200 py-4 px-7 dark:border-gray-800">
                    <h3 class="font-semibold text-gray-700 dark:text-gray-400">Security Status</h3>
                </div>
                <div class="p-7">
                    <div class="rounded-lg border border-gray-200 dark:border-gray-800 p-6">
                        <div class="space-y-4">
                            <div class="flex items-center justify-between">
                                <span class="text-sm font-medium text-gray-500 dark:text-gray-400">Email Status</span>
                                @if (Model?.User?.EmailConfirmed == true)
                                {
                                    <span class="inline-flex items-center gap-1.5 rounded-lg bg-success-light dark:bg-green-900/30 py-1 px-2 text-sm font-medium text-success dark:text-success-light">
                                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                        </svg>
                                        Verified
                                    </span>
                                }
                                else
                                {
                                    <span class="inline-flex items-center gap-1.5 rounded-lg bg-error-light dark:bg-error-900/30 py-1 px-2 text-sm font-medium text-error dark:text-error-light">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        Unverified
                                    </span>
                                }
                            </div>
                            <div class="flex items-center justify-between">
                                <span class="text-sm font-medium text-gray-500 dark:text-gray-400">2FA Status</span>
                                @if (Model?.User?.TwoFactorEnabled == true)
                                {
                                    <span class="inline-flex items-center gap-1.5 rounded-lg bg-success-light dark:bg-green-900/30 py-1 px-2 text-sm font-medium text-success dark:text-success-light">
                                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                        </svg>
                                        Enabled
                                    </span>
                                }
                                else
                                {
                                    <span class="inline-flex items-center gap-1.5 rounded-lg bg-red-100 dark:bg-red-900/30 py-1 px-2 text-sm font-medium text-red-700 dark:text-red-300">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        Disabled
                                    </span>
                                }
                            </div>
                            
                            <div class="flex flex-col">
                                <span class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Login Providers</span>
                                @if (Model?.Logins != null && Model.Logins.Any())
                                {
                                    <div class="flex flex-wrap gap-2">
                                        @foreach (var login in Model.Logins)
                                        {
                                            <span class="inline-flex items-center gap-1.5 rounded-lg bg-primary bg-opacity-10 py-1 px-2 text-sm font-medium text-primary">
                                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                                    <path fill-rule="evenodd" d="M18 8a6 6 0 01-7.743 5.743L10 14l-1 1-1 1H6v-1l1-1 1-1-1-1H6v-1h2l2.257-2.243A6 6 0 1118 8zm-6-4a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path>
                                                </svg>
                                                @login.LoginProvider
                                            </span>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <span class="text-sm text-gray-500 dark:text-gray-400">No external login providers</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="rounded-xl border border-gray-200 bg-white shadow-default dark:border-gray-800 dark:bg-surface-light">
                <div class="border-b border-gray-200 py-4 px-7 dark:border-gray-800">
                    <h3 class="font-semibold text-gray-700 dark:text-gray-400">Account Status</h3>
                </div>
                <div class="p-7">
                    <div class="rounded-lg border border-gray-200 dark:border-gray-800 p-6">
                        @if (isActive)
                        {
                            <div class="flex items-center">
                                <span class="mr-2 inline-block h-3 w-3 rounded-full bg-success"></span>
                                <span class="text-success">Account Active</span>
                            </div>
                        }
                        else
                        {
                            <div class="flex items-center">
                                <span class="mr-2 inline-block h-3 w-3 rounded-full bg-danger"></span>
                                <span class="text-danger">Account Locked</span>
                            </div>
                            <div class="mt-2 text-sm text-gray-500">
                                Locked until: @Model?.User?.LockoutEnd?.LocalDateTime.ToString("g")
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
